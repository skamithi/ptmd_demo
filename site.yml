---
- hosts: 127.0.0.1
  user: root
  roles:
    - role: setup_kvm_server

- hosts: ptmdemotmpl
  user: root
  roles:
    - role: base_vm


- hosts: 127.0.0.1
  user: root
  roles:
    - role: clone_vm

- hosts: ptmdemoservers
  user: root
  roles:
    - role: setup_ptm_demo_vms

- hosts: 127.0.0.1
  user: root
  vars:
    dnsmasqdir: '/var/lib/libvirt/dnsmasq'
  tasks:
    - name: get ptmdemo vm mgmt ip to host entry
      shell: grep {{item.name }} {{dnsmasqdir}}/{{ item.bridge }}.leases | awk '{print $3 , "  ", $4}'
      register: hostmapping
      with_items:
        - { name: 'vm1', bridge: 'basenet' }
        - { name: 'vm2', bridge: 'mgmtnet' }
        - { name: 'vm3', bridge: 'mgmtnet' }
        - { name: 'vm4', bridge: 'mgmtnet' }

    - name: add vm mgmt ip to host to hosts table on kvm host
      lineinfile: dest=/etc/hosts regexp="{{item.item.name}}\s+$" line="{{item.stdout}}"
      with_items: hostmapping.results

    - name: copy lldp checker to kvm host
      copy: src=files/lldp_checker.sh dest=/tmp mode=750

    - name: wait until lldp is active on all hosts
      command: /tmp/lldp_checker.sh

    - name: copy kvm startup script generator to tmp dir of kvm host
      copy: src=files/vm_startup_script.py  dest=/tmp mode=750

    - name: create kvm startup scripts
      command: /tmp/vm_startup_script.py

    - name: shutdown all ptm demo vms
      command: virsh shutdown {{ item }}
      with_items: vmnames

#    - name: sleep for a few seconds to let vms shutdown
#      pause: seconds=10

#    - name: bring up ptm demo vms using custom script
#      command: /tmp/{{item}}_startup.sh
#      with_items: vmnames

